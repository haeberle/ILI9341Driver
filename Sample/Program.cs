using System;
using System.Net.NetworkInformation;
using System.Threading;
using ILI9341Driver;
using nanoFramework.Hardware.Esp32;
using Windows.Devices.Gpio;

namespace nanoIli9341.Sample
{
    public class Program
    {
        static void WaitIP()
        {
            Console.WriteLine("Wait for IP");
            while (true)
            {
                NetworkInterface ni = NetworkInterface.GetAllNetworkInterfaces()[0];
                if (ni.IPv4Address != null && ni.IPv4Address.Length > 0)
                {
                    if (ni.IPv4Address[0] != '0')
                    {
                        Console.WriteLine("Have IP " + ni.IPv4Address);
                        break;
                    }
                }
                Thread.Sleep(1000);
            }
        }

        private static byte[] bmp = new byte[] {
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8,
                    0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF8
                };

        private static ushort[] bmp2 = new ushort[] {
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8,
                    0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8, 0x07F8
                };


        public static void Main()
        {
            //WaitIP();

            var gpioController = GpioController.GetDefault();

            // Set SPI2 pins for ESP32, I'm using an Adafruit HUZZAH32
            // to test.
            //Configuration.SetPinFunction(19, DeviceFunction.SPI2_MISO);
            //Configuration.SetPinFunction(18, DeviceFunction.SPI2_MOSI);
            //Configuration.SetPinFunction(5, DeviceFunction.SPI2_CLOCK);

            //var dataCommandPin = gpioController.OpenPin(33);
            //var chipSelectPin = gpioController.OpenPin(15);
            //var resetPin = gpioController.OpenPin(13);
            //var backlightPin = gpioController.OpenPin(32);

            // Using M5Stack
            var test = gpioController.OpenPin(21);
            test.SetDriveMode(GpioPinDriveMode.Output);
            var dataCommandPin = gpioController.OpenPin(27);
            var chipSelectPin = gpioController.OpenPin(14);
            var resetPin = gpioController.OpenPin(33);
            var backlightPin = gpioController.OpenPin(32);

            Configuration.SetPinFunction(19, DeviceFunction.SPI1_MISO);
            Configuration.SetPinFunction(23, DeviceFunction.SPI1_MOSI);
            Configuration.SetPinFunction(18, DeviceFunction.SPI1_CLOCK);

            var miso = Configuration.GetFunctionPin(DeviceFunction.SPI1_MISO);
            var mosi = Configuration.GetFunctionPin(DeviceFunction.SPI1_MOSI);
            var clk = Configuration.GetFunctionPin(DeviceFunction.SPI1_CLOCK);


            //var tft = new ILI9341(isLandscape: false,
            //    chipSelectPin: chipSelectPin,
            //    dataCommandPin: dataCommandPin,
            //    resetPin: resetPin,
            //    spiBus: "SPI1",
            //    backlightPin: backlightPin);

            var tft = new ILI9341(new M5StackLCDSettings() { Orientation = M5StackLCDSettings.Landscape },
               chipSelectPin: chipSelectPin,
               dataCommandPin: dataCommandPin,
               resetPin: resetPin,
               spiBus: "SPI1",
               backlightPin: backlightPin);

            var font = new StandardFixedWidthFont();
            tft.BacklightOn = true;
            tft.ClearScreen();
            tft.DrawString(10, 10, "Hello world!", 0xF800, font);
            //tft.BacklightOn = false;
            //tft.BacklightOn = true;

            tft.Mosaic(10, 1000);
            Thread.Sleep(1000);
            tft.FlipBox();
            Thread.Sleep(1000);

            tft.LoadBitmap(1, 1, 20, 40, bmp);
            Thread.Sleep(1000);


            var i = 0;
            for (; ; )
            {
                i = i > 100 ? 0 : i + 1;
                //test.Write(GpioPinValue.Low);
                //tft.BacklightOn = false;
                //Thread.Sleep(500);
                //test.Write(GpioPinValue.High);
                //tft.BacklightOn = true;
                tft.DrawString(10, 10, $"Hello world! + {i}", 0xF800, font);
                Thread.Sleep(500);
            }

            //Thread.Sleep(Timeout.Infinite);            
        }
    }
}
